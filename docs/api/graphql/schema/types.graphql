# Core Types

"""
Base event type for all security events in the system
"""
type SecurityEvent {
  id: ID!
  timestamp: DateTime!
  severity: Severity!
  category: String!
  source: EventSource!
  destination: EventDestination
  message: String!
  metadata: JSONObject
  enrichment: EventEnrichment
  tags: [String!]
  correlationId: String
}

"""
Source information for security events
"""
type EventSource {
  type: String!
  identifier: String!
  ip: String
  port: Int
  geolocation: Geolocation
  metadata: JSONObject
}

"""
Destination information for security events
"""
type EventDestination {
  identifier: String
  ip: String
  port: Int
  geolocation: Geolocation
  metadata: JSONObject
}

"""
Enrichment data for events
"""
type EventEnrichment {
  threatIntel: [ThreatIndicator!]
  assetInfo: AssetInfo
  vulnerabilities: [Vulnerability!]
  riskScore: Float
  context: JSONObject
}

"""
Alert rule definition
"""
type AlertRule {
  id: ID!
  name: String!
  description: String
  enabled: Boolean!
  severity: Severity!
  conditions: [RuleCondition!]!
  actions: [RuleAction!]!
  metadata: JSONObject
  createdAt: DateTime!
  updatedAt: DateTime!
  lastTriggered: DateTime
  statistics: RuleStatistics
}

"""
Rule condition for alert rules
"""
type RuleCondition {
  field: String!
  operator: ConditionOperator!
  value: JSON!
  metadata: JSONObject
}

"""
Action to be taken when rule conditions are met
"""
type RuleAction {
  type: ActionType!
  parameters: JSONObject!
  metadata: JSONObject
}

"""
Statistics for alert rules
"""
type RuleStatistics {
  triggeredCount: Int!
  lastTriggerTime: DateTime
  averageResponseTime: Float
  falsePositiveRate: Float
}

"""
Firewall policy definition
"""
type FirewallPolicy {
  id: ID!
  name: String!
  description: String
  version: String!
  rules: [FirewallRule!]!
  enabled: Boolean!
  priority: Int!
  metadata: JSONObject
  statistics: PolicyStatistics
}

"""
Individual firewall rule
"""
type FirewallRule {
  id: ID!
  name: String!
  priority: Int!
  action: FirewallAction!
  conditions: [FirewallCondition!]!
  enabled: Boolean!
  statistics: RuleStatistics
  metadata: JSONObject
}

"""
ML model information
"""
type MLModel {
  id: ID!
  name: String!
  type: ModelType!
  version: String!
  status: ModelStatus!
  metrics: ModelMetrics
  configuration: JSONObject
  deployments: [ModelDeployment!]
  metadata: JSONObject
}

"""
Model deployment information
"""
type ModelDeployment {
  id: ID!
  environment: String!
  version: String!
  status: DeploymentStatus!
  health: HealthStatus!
  metrics: DeploymentMetrics
  config: DeploymentConfig
}

"""
URL analysis result
"""
type URLAnalysis {
  url: String!
  category: URLCategory!
  threatScore: Float!
  timestamp: DateTime!
  analysis: URLScanResult
  indicators: [ThreatIndicator!]
  metadata: JSONObject
}

"""
Email analysis result
"""
type EmailAnalysis {
  id: ID!
  messageId: String!
  timestamp: DateTime!
  status: AnalysisStatus!
  threatScore: Float!
  sender: EmailParticipant!
  recipients: [EmailParticipant!]!
  subject: String!
  attachments: [AttachmentAnalysis!]
  urls: [URLAnalysis!]
  indicators: [ThreatIndicator!]
  verdict: AnalysisVerdict!
}

"""
System component health information
"""
type ComponentHealth {
  name: String!
  status: HealthStatus!
  version: String!
  lastUpdated: DateTime!
  metrics: HealthMetrics!
  dependencies: [DependencyHealth!]
}

# Common Types

"""
Geolocation information
"""
type Geolocation {
  country: String
  region: String
  city: String
  latitude: Float
  longitude: Float
  asn: ASNInfo
}

"""
ASN information
"""
type ASNInfo {
  number: Int!
  organization: String!
  route: String
  type: String
}

"""
Threat intelligence indicator
"""
type ThreatIndicator {
  type: IndicatorType!
  value: String!
  confidence: Float!
  severity: Severity!
  source: String!
  firstSeen: DateTime!
  lastSeen: DateTime!
  context: JSONObject
}

"""
Asset information
"""
type AssetInfo {
  id: ID!
  name: String!
  type: String!
  owner: String
  criticality: AssetCriticality!
  tags: [String!]
  metadata: JSONObject
}

"""
Vulnerability information
"""
type Vulnerability {
  id: ID!
  cve: String
  cvss: Float
  severity: Severity!
  description: String!
  remediation: String
  metadata: JSONObject
}

"""
Model metrics
"""
type ModelMetrics {
  accuracy: Float!
  precision: Float!
  recall: Float!
  f1Score: Float!
  latency: Float!
  customMetrics: JSONObject
}

"""
Deployment metrics
"""
type DeploymentMetrics {
  requestRate: Float!
  errorRate: Float!
  latency: LatencyMetrics!
  resourceUsage: ResourceMetrics!
}

"""
Latency metrics
"""
type LatencyMetrics {
  p50: Float!
  p95: Float!
  p99: Float!
  average: Float!
}

"""
Resource usage metrics
"""
type ResourceMetrics {
  cpuUsage: Float!
  memoryUsage: Float!
  gpuUsage: Float
  networkIn: Float!
  networkOut: Float!
}

"""
Health metrics
"""
type HealthMetrics {
  uptime: Float!
  errorRate: Float!
  latency: LatencyMetrics!
  saturation: Float!
}

"""
Email participant information
"""
type EmailParticipant {
  address: String!
  name: String
  domain: String!
  reputation: Float
  history: ParticipantHistory
}

"""
Attachment analysis result
"""
type AttachmentAnalysis {
  filename: String!
  mimeType: String!
  size: Int!
  sha256: String!
  threatScore: Float!
  verdict: AnalysisVerdict!
  indicators: [ThreatIndicator!]
}

# Interfaces

"""
Base interface for all entities
"""
interface Entity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  metadata: JSONObject
}

"""
Interface for all analyzable content
"""
interface Analyzable {
  threatScore: Float!
  indicators: [ThreatIndicator!]
  verdict: AnalysisVerdict!
  confidence: Float!
}

# Additional Enums

enum IndicatorType {
  IP
  DOMAIN
  URL
  FILE_HASH
  EMAIL
  VULNERABILITY
}

enum AssetCriticality {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum URLCategory {
  MALWARE
  PHISHING
  COMMAND_AND_CONTROL
  MALICIOUS
  SUSPICIOUS
  BENIGN
}

enum AnalysisVerdict {
  MALICIOUS
  SUSPICIOUS
  BENIGN
  UNKNOWN
}

enum HealthStatus {
  HEALTHY
  DEGRADED
  UNHEALTHY
  UNKNOWN
}

enum DeploymentStatus {
  PENDING
  DEPLOYING
  RUNNING
  FAILED
  TERMINATED
}

enum ConditionOperator {
  EQUALS
  NOT_EQUALS
  GREATER_THAN
  LESS_THAN
  CONTAINS
  NOT_CONTAINS
  MATCHES
  IN
  NOT_IN
}

enum ActionType {
  ALERT
  BLOCK
  QUARANTINE
  LOG
  NOTIFY
  CUSTOM
}

enum FirewallAction {
  ALLOW
  DENY
  LOG
  INSPECT
  REDIRECT
}

# Unions

"""
Analysis result union type
"""
union AnalysisResult = URLAnalysis | EmailAnalysis | FileAnalysis

"""
Event source union type
"""
union EventSourceType = NetworkSource | SystemSource | ApplicationSource | CustomSource