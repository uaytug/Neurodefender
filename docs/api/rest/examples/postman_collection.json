{
    "info": {
      "_postman_id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
      "name": "Neurodefender API",
      "description": "Complete API collection for Neurodefender platform",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
      {
        "key": "base_url",
        "value": "https://api.neurodefender.com/v1",
        "type": "string"
      },
      {
        "key": "access_token",
        "value": "your_access_token",
        "type": "string"
      }
    ],
    "item": [
      {
        "name": "Authentication",
        "item": [
          {
            "name": "Generate Token",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{base_url}}/auth/token",
                "host": ["{{base_url}}"],
                "path": ["auth", "token"]
              },
              "body": {
                "mode": "raw",
                "raw": "{\n  \"grant_type\": \"password\",\n  \"username\": \"user@example.com\",\n  \"password\": \"secure_password\",\n  \"scope\": [\"read:events\", \"write:alerts\"]\n}"
              }
            },
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status code is 200', function() {",
                    "  pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains access_token', function() {",
                    "  const response = pm.response.json();",
                    "  pm.expect(response).to.have.property('access_token');",
                    "  pm.environment.set('access_token', response.access_token);",
                    "});"
                  ]
                }
              }
            ]
          },
          {
            "name": "Revoke Token",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{access_token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{base_url}}/auth/token/revoke",
                "host": ["{{base_url}}"],
                "path": ["auth", "token", "revoke"]
              },
              "body": {
                "mode": "raw",
                "raw": "{\n  \"token\": \"rt_abc123xyz\",\n  \"token_type_hint\": \"refresh_token\"\n}"
              }
            }
          }
        ]
      },
      {
        "name": "SIEM",
        "item": [
          {
            "name": "Ingest Event",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{access_token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{base_url}}/siem/events",
                "host": ["{{base_url}}"],
                "path": ["siem", "events"]
              },
              "body": {
                "mode": "raw",
                "raw": "{\n  \"source\": \"firewall\",\n  \"severity\": \"high\",\n  \"timestamp\": \"{{$isoTimestamp}}\",\n  \"message\": \"Suspicious outbound connection detected\",\n  \"metadata\": {\n    \"source_ip\": \"192.168.1.100\",\n    \"destination_ip\": \"203.0.113.1\",\n    \"protocol\": \"TCP\"\n  }\n}"
              }
            },
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status code is 201', function() {",
                    "  pm.response.to.have.status(201);",
                    "});",
                    "",
                    "pm.test('Event ID is returned', function() {",
                    "  const response = pm.response.json();",
                    "  pm.expect(response).to.have.property('event_id');",
                    "});"
                  ]
                }
              }
            ]
          }
        ]
      },
      {
        "name": "NGFW",
        "item": [
          {
            "name": "Analyze Traffic",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{access_token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{base_url}}/ngfw/analyze",
                "host": ["{{base_url}}"],
                "path": ["ngfw", "analyze"]
              },
              "body": {
                "mode": "raw",
                "raw": "{\n  \"session_id\": \"sess_123\",\n  \"flow\": {\n    \"source\": {\n      \"ip\": \"192.168.1.100\",\n      \"port\": 54321\n    },\n    \"destination\": {\n      \"ip\": \"203.0.113.1\",\n      \"port\": 443\n    },\n    \"protocol\": \"TCP\"\n  },\n  \"metadata\": {\n    \"application\": \"chrome\"\n  }\n}"
              }
            }
          }
        ]
      },
      {
        "name": "ML Platform",
        "item": [
          {
            "name": "Train Model",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{access_token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{base_url}}/ml/models/train",
                "host": ["{{base_url}}"],
                "path": ["ml", "models", "train"]
              },
              "body": {
                "mode": "raw",
                "raw": "{\n  \"model_id\": \"model_123\",\n  \"dataset\": {\n    \"id\": \"dataset_456\",\n    \"version\": \"1.0.0\"\n  },\n  \"parameters\": {\n    \"epochs\": 100,\n    \"batch_size\": 32,\n    \"learning_rate\": 0.001\n  }\n}"
              }
            }
          }
        ]
      },
      {
        "name": "Phishing Protection",
        "item": [
          {
            "name": "Analyze Email",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{access_token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{base_url}}/phishing/email/analyze",
                "host": ["{{base_url}}"],
                "path": ["phishing", "email", "analyze"]
              },
              "body": {
                "mode": "raw",
                "raw": "{\n  \"message_id\": \"msg_123\",\n  \"metadata\": {\n    \"from\": \"suspicious@example.com\",\n    \"to\": [\"user@company.com\"],\n    \"subject\": \"Urgent: Account Verification Required\"\n  },\n  \"content\": {\n    \"text\": \"Please verify your account...\",\n    \"html\": \"<html>Please verify...</html>\"\n  },\n  \"urls\": [\n    {\n      \"url\": \"https://suspicious-site.com/verify\",\n      \"context\": \"href\"\n    }\n  ]\n}"
              }
            }
          }
        ]
      },
      {
        "name": "Administration",
        "item": [
          {
            "name": "System Status",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{access_token}}"
                }
              ],
              "url": {
                "raw": "{{base_url}}/admin/system/status",
                "host": ["{{base_url}}"],
                "path": ["admin", "system", "status"]
              }
            },
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status code is 200', function() {",
                    "  pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('System status is healthy', function() {",
                    "  const response = pm.response.json();",
                    "  pm.expect(response.status).to.eql('healthy');",
                    "});"
                  ]
                }
              }
            ]
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "type": "text/javascript",
          "exec": [
            "// Global pre-request scripts",
            "if (!pm.environment.get('access_token')) {",
            "  console.log('Warning: access_token not set in environment');",
            "}"
          ]
        }
      }
    ]
  }